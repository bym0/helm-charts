---
openaiApiKey: ""
meiliMasterKey: "generateASuperSecretKey"
nextAuthSecret: "generateASuperSecretKey"
ingressDomain: "example.local"
nextAuthUrl: "http://localhost:3000"

dataDir: "/data"
hoarderImageTag: "0.21.0"

common:
  controllers:
    # Configure the main controller
    main:
      enabled: true
      containers:
        # Configure the main application container
        main:
          image:
            # -- image repository
            repository: ghcr.io/hoarder-app/hoarder
            # -- image tag
            tag: "{{ .Values.hoarderImageTag }}"
          # -- environment variables
          env:
            - name: OPENAI_API_KEY
              value: "{{ .Values.openaiApiKey }}"
            - name: MEILI_ADDR
              value: "http://{{ .Release.Name }}-meilisearch:7700"
            - name: BROWSER_WEB_URL
              value: "http://{{ .Release.Name }}-chrome:9222"
            - name: DATA_DIR
              value: "{{ .Values.dataDir }}"
            - name: MEILI_MASTER_KEY
              value: "{{ .Values.meiliMasterKey }}"
            - name: NEXTAUTH_URL
              value: "{{ .Values.nextAuthUrl }}"
            - name: NEXTAUTH_SECRET
              value: "{{ .Values.nextAuthSecret }}"

    chrome:
      enabled: true
      containers:
        chrome:
          # dependsOn: main
          image:
            # -- image repository
            repository: gcr.io/zenika-hub/alpine-chrome
            # -- image tag
            tag: 123
          # -- command
          command:
            - chromium-browser
            - --headless
            - --no-sandbox
            - --disable-gpu
            - --disable-dev-shm-usage
            - --remote-debugging-address=0.0.0.0
            - --remote-debugging-port=9222
            - --hide-scrollbars

    meilisearch:
      containers:
        meilisearch:
          enabled: true
          # dependsOn: main
          image:
            repository: getmeili/meilisearch
            tag: v1.11.1
          # -- environment variables
          env:
            - name: MEILI_NO_ANALYTICS
              value: true
              # i dont know if thats needed
            - name: DATA_DIR
              value: "{{ .Values.dataDir }}"
            - name: MEILI_ADDR
              value: "http://127.0.0.1:7700"
            - name: MEILI_MASTER_KEY
              value: "{{ .Values.meiliMasterKey }}"
            - name: NEXTAUTH_URL
              value: "{{ .Values.nextAuthUrl }}"
            - name: NEXTAUTH_SECRET
              value: "{{ .Values.nextAuthSecret }}"

  service:
    # Configure a service for the main application
    main:
      enabled: true
      controller: main
      type: ClusterIP
      ports:
        http:
          port: 3000
    chrome:
      enabled: true
      controller: chrome
      type: ClusterIP
      ports:
        http:
          port: 9222
    meilisearch:
      enabled: true
      controller: meilisearch
      type: ClusterIP
      ports:
        http:
          port: 7700

  ingress:
    # Configure an Ingress for the main application
    main:
      enabled: true
      className: ""
      # annotations: {}
      hosts:
        - host: "{{ .Values.ingressDomain }}"
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: main
                port: http
      tls:
        - secretName: hoarder-tls
          hosts:
            - "{{ .Values.ingressDomain }}"

  # -- Configure persistence settings for the chart under this key.
  persistence:
    data:
      enabled: true
      type: persistentVolumeClaim
      # storageClass: ""
      accessMode: ReadWriteOnce
      size: 10Gi
      advancedMounts:
        main:
          main:
            - path: /data
