---
common:
  name: paperless-ngx
  controllers:
    main:
      enabled: true
      containers:
        # Configure the main application container
        main:
          image:
            # -- image repository
            repository: ghcr.io/paperless-ngx/paperless-ngx
            # -- image tag
            tag: 2.17.1
            # -- image pull policy
            pullPolicy: IfNotPresent
          # -- Environment variables [[ref]](https://docs.paperless-ngx.com/configuration/)
          # @default -- See [values.yaml](./values.yaml)
          env:
            # -- Set the container timezone
            TZ: Europe/Berlin
            # PAPERLESS_SECRET_KEY: ""
            # -- probes
          probes:
            liveness:
              enabled: true
              custom: false
              spec:
                httpGet:
                  path: /
                  port: 8000
                initialDelaySeconds: 15
                periodSeconds: 10
                timeoutSeconds: 5
                failureThreshold: 3

  service:
    # Configure a service for the main application
    main:
      enabled: true
      controller: main
      type: ClusterIP
      ports:
        http:
          port: 8000

  ingress:
    # -- Enable and configure ingress settings for the chart under this key.
    # @default -- See [values.yaml](./values.yaml)
    main:
      enabled: false
      annotations:
        nginx.ingress.kubernetes.io/proxy-body-size: 64m
      # hosts:
      #   - host: chart-example.local
      #     paths:
      #       - path: /
      # tls:
      #   - secretName: chart-example.local
      #     hosts:
      #       - chart-example.local

  persistence:
    # -- Configure data volume settings for the chart under this key.
    # @default -- See [values.yaml](./values.yaml)
    data:
      enabled: false
      retain: true
      storageClass: ""
      accessMode: ReadWriteOnce
      size: 1Gi
      advancedMounts:
        main:
          main:
            - path: /usr/src/paperless/data
    # -- Configure media volume settings for the chart under this key.
    # @default -- See [values.yaml](./values.yaml)
    media:
      enabled: false
      retain: true
      storageClass: ""
      accessMode: ReadWriteOnce
      size: 8Gi
      advancedMounts:
        main:
          main:
            - path: /usr/src/paperless/media
    # -- Configure export volume settings for the chart under this key.
    # @default -- See [values.yaml](./values.yaml)
    export:
      enabled: true
      retain: true
      storageClass: ""
      accessMode: ReadWriteOnce
      size: 1Gi
      advancedMounts:
        main:
          main:
          - path: /usr/src/paperless/export
    # -- Configure consume volume settings for the chart under this key.
    # @default -- See [values.yaml](./values.yaml)
    consume:
      enabled: true
      retain: true
      storageClass: ""
      accessMode: ReadWriteOnce
      size: 4Gi
      advancedMounts:
        main:
          main:
          - path: /usr/src/paperless/consume


# -- Enable and configure postgresql database subchart under this key.
#    If enabled, the app's db envs will be set for you.
#    [[ref]](https://github.com/bitnami/charts/tree/main/bitnami/postgresql)
# @default -- See [values.yaml](./values.yaml)
postgresql:
  enabled: false
  auth:
    database: paperless
    postgresPassword: changeme
  primary:
    persistence:
      enabled: false
      # storageClass: ""
      # size: 8Gi

# -- Enable and configure mariadb database subchart under this key.
#    If enabled, the app's db envs will be set for you.
#    [[ref]](https://github.com/bitnami/charts/tree/main/bitnami/mariadb)
# @default -- See [values.yaml](./values.yaml)
mariadb:
  enabled: false
  auth:
    database: paperless
    username: paperless
    password: changeme
    rootPassword: changeme
  primary:
    persistence:
      enabled: false
      # storageClass: ""
      # size: 8Gi

# -- Enable and configure redis subchart under this key.
#    If enabled, the app's Redis env will be set for you.
#    [[ref]](https://github.com/bitnami/charts/tree/main/bitnami/redis)
# @default -- See [values.yaml](./values.yaml)
redis:
  enabled: true
  auth:
    enabled: true
    username: ""
    # Use an existing secret for redis auth. Do this if you're using Argo to manage your instance or otherwise using helm template under the hood
    #     The secret name can vary, but the password key must be redis-password.
    # existingSecret: paperless-redis
    # existingSecretPasswordKey: redis-password
  master:
    persistence:
      enabled: false
  replica:
    replicaCount: 0
